var TokenType;(function(TokenType){TokenType[TokenType["Text"]=0]="Text";TokenType[TokenType["StartTag"]=1]="StartTag";TokenType[TokenType["EndTag"]=2]="EndTag"})(TokenType||(TokenType={}));var Token=function(){function Token(content,tokenType,tagAttributes){this.content=content;this.tokenType=tokenType;this.tagAttributes=tagAttributes}Token.prototype.toString=function(){return this.content+" ("+TokenType[this.tokenType]+")"};Token.prototype.equals=function(token){return this.tokenType==token.tokenType&&this.content==token.content};return Token}();var Tokenizer=function(){function Tokenizer(bbTags){this.bbTags=bbTags}Tokenizer.prototype.isStartTag=function(str){return str[0]=="["&&str[str.length-1]=="]"};Tokenizer.prototype.isEndTag=function(str){return str[0]=="["&&str[1]=="/"&&str[str.length-1]=="]"};Tokenizer.prototype.createTextToken=function(content){return new Token(content,0)};Tokenizer.prototype.createEndTagToken=function(str,tokenStart,tokenLength){var endTagStart=tokenStart;var endTagEnd=tokenStart+tokenLength-1;var endTag=str.substr(endTagStart,endTagEnd-endTagStart+1);endTag=endTag.substr(2,endTag.length-3);return new Token(endTag,2)};Tokenizer.prototype.createSimpleEndTagToken=function(str){str=str.substr(2,str.length-3);return new Token(str,2)};Tokenizer.prototype.createStartTagToken=function(str){str=str.substr(1,str.length-2);var tagName=str;var attributes=Array();var hasParsedName=false;var attrNameStart=0;var attrName="";var parseName=false;var attrValueStart=0;var parseValue=false;var valueStarted=false;var i=0;while(i<str.length){var currentChar=str[i];if(!hasParsedName){if(currentChar==" "){tagName=str.substr(0,i);hasParsedName=true;attrNameStart=i+1;parseName=true}if(currentChar=="="){tagName=str.substr(0,i);attrName=tagName;hasParsedName=true;parseValue=true;valueStarted=false;parseName=false}}else{if(!parseName&&!parseValue){if(currentChar==" "){attrNameStart=i+1;parseName=true}}if(parseName){if(currentChar=="="){attrName=str.substr(attrNameStart,i-attrNameStart);parseValue=true;valueStarted=false;parseName=false}}if(parseValue){if(currentChar=='"'){if(valueStarted){var attrValue=str.substr(attrValueStart,i-attrValueStart);parseValue=false;if(attributes[attrName]==undefined){attributes[attrName]=attrValue}}else{valueStarted=true;attrValueStart=i+1}}}}i++}return new Token(tagName,1,attributes)};Tokenizer.prototype.tokenizeString=function(str){var tokens=this.getTokens(str);for(var i in tokens){var currentToken=tokens[i];if(this.bbTags[currentToken.content]==undefined){if(currentToken.tokenType==1){currentToken.content="["+currentToken.content+"]";currentToken.tokenType=0}if(currentToken.tokenType==2){currentToken.content="[/"+currentToken.content+"]";currentToken.tokenType=0}}}return tokens};Tokenizer.prototype.getTokens=function(str){var tokens=new Array;var currentStr="";var currentStrStart=0;var i=0;var endedInTag=false;var suppressNesting=false;var currentTag="";while(i<str.length){currentStr+=str[i];if(!suppressNesting){if(str[i]=="["){if(currentStr.length>1){var content=currentStr.substr(0,currentStr.length-1);if(content!=""){tokens.push(this.createTextToken(content))}}currentStr="[";currentStrStart=i}if(currentStr.length>=3){if(this.isEndTag(currentStr)){tokens.push(this.createEndTagToken(str,currentStrStart,currentStr.length));currentStr="";if(i==str.length-1){endedInTag=true}}else if(this.isStartTag(currentStr)){if(!suppressNesting){var startTag=this.createStartTagToken(currentStr);tokens.push(startTag);currentStr="";currentTag=startTag.content;var bbTag=this.bbTags[startTag.content];if(bbTag!=undefined){if(bbTag.noNesting){suppressNesting=true}}}}}}else{var endTag="[/"+currentTag+"]";if(endsWith(currentStr,endTag)){var content=currentStr.substr(0,currentStr.length-(3+currentTag.length));tokens.push(this.createTextToken(content));tokens.push(this.createSimpleEndTagToken(endTag));currentStr="";suppressNesting=false;if(i==str.length-1){endedInTag=true}}}i++}if(!endedInTag){var content=currentStr.substr(0,currentStr.length);if(content!=""){tokens.push(this.createTextToken(content))}}return tokens};return Tokenizer}();var TreeType;(function(TreeType){TreeType[TreeType["Root"]=0]="Root";TreeType[TreeType["Text"]=1]="Text";TreeType[TreeType["Tag"]=2]="Tag"})(TreeType||(TreeType={}));var BBCodeParseTree=function(){function BBCodeParseTree(treeType,content,attributes,subTrees){this.treeType=treeType;this.content=content;this.attributes=attributes;this.subTrees=subTrees;this.subTrees=new Array}BBCodeParseTree.prototype.isValid=function(){if(this.subTrees.length==0){return true}for(var i in this.subTrees){var currentTree=this.subTrees[i];if(currentTree==null||!currentTree.isValid()){return false}}return true};BBCodeParseTree.prototype.toString=function(){return TreeType[this.treeType]+" - "+this.content};BBCodeParseTree.buildTree=function(str,bbTags){var tokenizer=new Tokenizer(bbTags);var tokens=tokenizer.tokenizeString(str);return BBCodeParseTree.buildTreeFromTokens(new BBCodeParseTree(0,str),tokens.reverse())};BBCodeParseTree.buildTreeFromTokens=function(rootTree,tokens,currentTag){if(typeof currentTag==="undefined"){currentTag=""}if(rootTree==null){return null}if(tokens.length==0){return rootTree}var currentToken=tokens.pop();if(currentToken.tokenType==0){rootTree.subTrees.push(new BBCodeParseTree(1,currentToken.content))}if(currentToken.tokenType==1){var tagName=currentToken.content;rootTree.subTrees.push(BBCodeParseTree.buildTreeFromTokens(new BBCodeParseTree(2,tagName,currentToken.tagAttributes),tokens,tagName))}if(currentToken.tokenType==2){var tagName=currentToken.content;if(tagName==currentTag){return rootTree}else{return null}}if(tokens.length==0){if(currentTag!=""){return null}}return BBCodeParseTree.buildTreeFromTokens(rootTree,tokens,currentTag)};return BBCodeParseTree}();function endsWith(str,endStr){if(str.length==0){return false}if(endStr.length>str.length){return false}var inStrEnd=str.substr(str.length-endStr.length,endStr.length);return endStr==inStrEnd}function startsWith(str,startStr){if(str.length==0){return false}if(startStr.length>str.length){return false}var inStrStart=str.substr(0,startStr.length);return startStr==inStrStart}var tagsToReplace={"&":"&amp;","<":"&lt;",">":"&gt;"};function escapeHTML(html){return html.replace(/[&<>]/g,function(tag){return tagsToReplace[tag]||tag})}var BBTag=function(){function BBTag(tagName,insertLineBreaks,suppressLineBreaks,noNesting,markupGenerator){this.tagName=tagName;this.insertLineBreaks=insertLineBreaks;this.suppressLineBreaks=suppressLineBreaks;this.noNesting=noNesting;this.markupGenerator=markupGenerator;if(markupGenerator==undefined){this.markupGenerator=function(tag,content,attr){return"<"+tag.tagName+">"+content+"</"+tag.tagName+">"}}}return BBTag}();var BBCodeParser=function(){function BBCodeParser(bbTags){this.bbTags=bbTags}BBCodeParser.prototype.parseString=function(content){var parseTree=BBCodeParseTree.buildTree(content,this.bbTags);if(!parseTree.isValid()){return content}return this.treeToHtml(parseTree.subTrees,true)};BBCodeParser.prototype.treeToHtml=function(subTrees,insertLineBreak){var _this=this;var htmlString="";var suppressLineBreak=false;subTrees.forEach(function(currentTree){if(currentTree.treeType==1){var textContent=currentTree.content;textContent=escapeHTML(textContent);if(insertLineBreak&&!suppressLineBreak){textContent=textContent.replace(/(\r\n|\n|\r)/gm,"<br>");suppressLineBreak=false}htmlString+=textContent}else{var bbTag=_this.bbTags[currentTree.content];var content=_this.treeToHtml(currentTree.subTrees,bbTag.InsertLineBreaks);htmlString+=bbTag.markupGenerator(bbTag,content,currentTree.attributes);suppressLineBreak=bbTag.suppressLineBreaks}});return htmlString};return BBCodeParser}();var BBCodeParserSettings=function(){function BBCodeParserSettings(){}BBCodeParserSettings.defaultTags=function(languages){var bbTags=new Array;bbTags["b"]=new BBTag("b",true,false,false);bbTags["i"]=new BBTag("i",true,false,false);bbTags["u"]=new BBTag("u",true,false,false);bbTags["text"]=new BBTag("text",true,false,true,function(tag,content,attr){return content});bbTags["img"]=new BBTag("img",true,false,false,function(tag,content,attr){return'<img src="'+content+'" />'});bbTags["url"]=new BBTag("url",true,false,false,function(tag,content,attr){var link=content;if(attr["url"]!=undefined){link=escapeHTML(attr["url"])}if(!startsWith(link,"http://")&&!startsWith(link,"https://")){link="http://"+link}return'<a href="'+link+'" target="_blank">'+content+"</a>"});return bbTags};return BBCodeParserSettings}();